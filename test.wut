let N : f32

fn average(x: f32, y: f32): f32 {
    return (x + y) / 2.0
}

fn func5() {
    N += average(N, N)
}
fn func4() {
    N += 2.0 * average(N + 1.0, N + 2.0)
}
fn func3() {
    N *= 2.1
}
fn func2() {
    N /= 3.5
}

fn recursion(nRec: s32) {
    if nRec >= 1 {
        recursion(nRec - 1)
    }
    if nRec == 5 {
        func5()
    }
    else if nRec == 4 { 
        func4()
    }
    else if nRec == 3 {
        func3()
    }
    else if nRec == 2 {
        func2()
    }
    else {
        N *= 1.5
    }
}

fn main() {
    let i: f32
    N = 0.0
    for i = 0.0; i <= 1.0; i += 0.25 {
        average(i, i)
        recursion(5)
        if N > 100.0 {
            N = 0.0
        }
    }
}

fn test(pv: ref Point2f) {
    pv.x += 1.0
    print_point2f(pv)
}
